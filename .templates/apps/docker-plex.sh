#!/bin/bash
####################################
# All rights reserved.              #
# started from Zero                 #
# Docker owned dockserver           #
# Docker Maintainer dockserver      #
#####################################
#####################################
# THIS DOCKER IS UNDER LICENSE      #
# NO CUSTOMIZING IS ALLOWED         #
# NO REBRANDING IS ALLOWED          #
# NO CODE MIRRORING IS ALLOWED      #
#####################################
# shellcheck disable=SC2086
# shellcheck disable=SC2046

FOLDER=$1
APP=$2
USERNAME=$3
TOKEN=$4

### APP SETTINGS ###

APPBRANCH="master"
APPLINK="https://plex.tv"
##NEWVERSION=$(curl -sX GET "https://plex.tv/api/downloads/5.json" | jq -r '.computer.Linux.version')

## GET PLEX PASS VERSION ##
rm -rf plex-media-server-plexpass
git clone --quiet --depth=1 https://aur.archlinux.org/plex-media-server-plexpass.git

NEWVERSION="$(grep -oP "(?<=pkgver=).*" ./plex-media-server-plexpass/PKGBUILD)"
NEWVERSION="${NEWVERSION}-$(grep -oP "(?<=_pkgsum=).*" ./plex-media-server-plexpass/PKGBUILD)"
NEWVERSION="${NEWVERSION#*v}"
NEWVERSION="${NEWVERSION#*release-}"
NEWVERSION="${NEWVERSION}"

rm -rf plex-media-server-plexpass

## PASS END

HEADLINE="$(cat ./.templates/headline.txt)"

DESCRIPTION="Docker Container for Plex Media Server || PLEX PASS"
BASEIMAGE="ghcr.io/linuxserver/baseimage-ubuntu:jammy"

PLEX_DOWNLOAD="https://downloads.plex.tv/plex-media-server-new"

INSTCOMMAND="apt-get install -yqq"
UPTCOMMAND="apt-get update -yqq"
PACKAGES="aria2 uuid-runtime udev jq wget curl unzip unrar gpg-agent software-properties-common"
PACKAGESINTEL="intel-opencl-icd intel-gpu-tools i965-va-driver-shaders va-driver-all mesa-vulkan-drivers gpg-agent libmfx1 ocl-icd-libopencl1"
PLEXINST="dpkg -i --force-confold /tmp/plex.deb"
CLEANUP="apt-get clean -yqq && \\
   rm -rf /etc/default/plexmediaserver /tmp/* /var/lib/apt/lists/* /var/tmp/*"

PICTURE="./images/$APP.png"
APPFOLDER="./$FOLDER/$APP"

### RELEASE SETTINGS ###

echo '{
   "appname": "'${APP}'",
   "apppic": "'${PICTURE}'",
   "appfolder": "./'$FOLDER'/'$APP'",
   "newversion": "'${NEWVERSION}'",
   "appbranch": "'${APPBRANCH}'",
   "baseimage": "'${BASEIMAGE}'",
   "description": "'${DESCRIPTION}'",
   "body": "Upgrading '${APP}' to '${NEWVERSION}'",
   "user": "github-actions[bot]"
}' > "./$FOLDER/$APP/release.json"

### DOCKER BUILD ###
### GENERATE Dockerfile based on release.json

echo -e '## This file is automatically generated (based on release.json)
##
## Do not changes any lines here
##
'"${HEADLINE}"'
FROM '"${BASEIMAGE}"'
LABEL org.opencontainers.image.source="'"https://github.com/dockserver/container"'"

ARG TARGETPLATFORM
ARG BUILDPLATFORM

ARG VERSION="'"${NEWVERSION}"'"
ARG BRANCH="'"${APPBRANCH}"'"

ENV NVIDIA_DRIVER_CAPABILITIES="'"compute,video,utility"'" \
    DEBIAN_FRONTEND="'"noninteractive"'" \
    PLEX_DOWNLOAD="'"https://downloads.plex.tv/plex-media-server-new"'" \
    PLEX_MEDIA_SERVER_APPLICATION_SUPPORT_DIR="'"/config/Library/Application Support"'" \
    PLEX_MEDIA_SERVER_HOME="'"/usr/lib/plexmediaserver"'" \
    PLEX_MEDIA_SERVER_MAX_PLUGIN_PROCS="'"6"'" \
    PLEX_MEDIA_SERVER_USER="'"abc"'" \
    PLEX_MEDIA_SERVER_INFO_VENDOR="'"Docker"'" \
    PLEX_MEDIA_SERVER_INFO_DEVICE="'"Docker Container"'" \
    S6_CMD_WAIT_FOR_SERVICES_MAXTIME="'"0"'"

RUN \
   apt-get update -yqq && apt-get install gnupg2 wget ca-certificates lsb-release software-properties-common -yqq && \
   case $TARGETPLATFORM in \
    '"'linux/amd64'"') \
         export ARCH=amd64 && \
      echo "'"**** install runtime packages ****"'" && \
         '"${UPTCOMMAND}"' && \
      echo "'"**** install Intel packages ****"'" && \
         '"${INSTCOMMAND}"' '"${PACKAGESINTEL}"'; \
    ;; \
    '"'linux/arm64'"') export ARCH='arm64' && unset NVIDIA_DRIVER_CAPABILITIES ;; \
   esac \
   && \
   echo "'"**** install runtime packages ****"'" && \
     '"${UPTCOMMAND}"' && \
   echo "'"**** install packages ****"'" && \
     '"${INSTCOMMAND}"' '"${PACKAGES}"' && \
   echo "'"**** install plex ****"'" && \
     aria2c -d /tmp -o plex.deb "'"${PLEX_DOWNLOAD}/"'${VERSION}'"/debian/plexmediaserver_"'${VERSION}'"_"'${ARCH}'".deb"'" && \
     '"${PLEXINST}"' && \
   echo "'"**** set permissions ****"'" && \
     usermod -d /app abc && \
  echo "'"**** cleanup ****"'" && \
     '"${CLEANUP}"'

COPY --chown=abc '"${APPFOLDER}"'/root/ /

##EOF' > ./$FOLDER/$APP/Dockerfile
