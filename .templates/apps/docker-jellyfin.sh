#!/bin/bash
####################################
# All rights reserved.              #
# started from Zero                 #
# Docker owned dockserver           #
# Docker Maintainer dockserver      #
#####################################
#####################################
# THIS DOCKER IS UNDER LICENSE      #
# NO CUSTOMIZING IS ALLOWED         #
# NO REBRANDING IS ALLOWED          #
# NO CODE MIRRORING IS ALLOWED      #
#####################################
# shellcheck disable=SC2086
# shellcheck disable=SC2046

FOLDER=$1
APP=$2
USERNAME=$3
TOKEN=$4

### APP SETTINGS ###

APPBRANCH="master"
APPLINK="https://api.github.com/repos/jellyfin/jellyfin"
NEWVERSION=$(
curl -sX GET https://repo.jellyfin.org/ubuntu/dists/focal/main/binary-amd64/Packages | grep -A 8 -m 1 'Package: jellyfin-server' | awk -F ': ' '/Version/{print $2;exit}'

)
NEWVERSION="${NEWVERSION#*v}"
NEWVERSION="${NEWVERSION#*release-}"
NEWVERSION="${NEWVERSION}"

HEADLINE="$(cat ./.templates/headline.txt)"

DESCRIPTION="$(curl -u $USERNAME:$TOKEN -sX GET "$APPLINK" | jq -r '.description')"
BASEIMAGE="ghcr.io/linuxserver/baseimage-ubuntu:focal"

INTEL_LIBVA_VER="2.13.0+i643~u20.04"
INTEL_GMM_VER="21.3.3+i643~u20.04"
INTEL_iHD_VER="21.4.1+i643~u20.04"

AMDEXTRA="mesa-va-drivers intel-media-va-driver-non-free beignet-opencl-icd intel-media-va-driver-non-free i965-va-driver"
ARMEXTRA="libomxil-bellagio0 libomxil-bellagio-bin libraspberrypi0"

INSTCOMMAND="apt-get install --no-install-recommends -yqq"
UPTCOMMAND="apt-get update -yqq"
BUILDPACK="gnupg curl software-properties-common"

PACKAGES="at jellyfin-ffmpeg jellyfin-web libfontconfig1 libfreetype6 libssl1.1"

CLEANUP="apt-get remove -yqq aria2 jq software-properties-common gpg-agent && \\
   apt-get autoremove -yqq && apt-get clean -yqq && \\
   rm -rf /tmp/* /var/lib/apt/lists/* /var/tmp/"

PICTURE="./images/$APP.png"
APPFOLDER="./$FOLDER/$APP"
PORT="EXPOSE 8096 8920"
VOLUMEN="VOLUME /config"

### RELEASE SETTINGS ###

echo '{
   "appname": "'${APP}'",
   "apppic": "'${PICTURE}'",
   "appfolder": "./'$FOLDER'/'$APP'",
   "newversion": "'${NEWVERSION}'",
   "appbranch": "'${APPBRANCH}'",
   "baseimage": "'${BASEIMAGE}'",
   "description": "'${DESCRIPTION}'",
   "body": "Upgrading '${APP}' to '${NEWVERSION}'",
   "user": "github-actions[bot]"
}' > "./$FOLDER/$APP/release.json"

### DOCKER BUILD ###
### GENERATE Dockerfile based on release.json

echo '## This file is automatically generated (based on release.json)
##
## Do not changes any lines here
##
'"${HEADLINE}"'
FROM '"${BASEIMAGE}"'
LABEL org.opencontainers.image.source="'"https://github.com/dockserver/container"'"


ARG TARGETPLATFORM
ARG BUILDPLATFORM
ARG VERSION="'"${NEWVERSION}"'"
ARG BRANCH="'"${APPBRANCH}"'"

ENV NVIDIA_DRIVER_CAPABILITIES="'"compute,video,utility"'" \
    DEBIAN_FRONTEND="'"noninteractive"'"

RUN \
   echo "'"**** update packages ****"'" && \
     '"${UPTCOMMAND}"' && \
   echo "'"**** install build packages ****"'" && \
     '"${INSTCOMMAND}"' '"${BUILDPACK}"' && \
   case $TARGETPLATFORM in \
    '"'linux/amd64'"') \
        export ARCH='"'amd64'"' && \
        curl -s https://repo.jellyfin.org/ubuntu/jellyfin_team.gpg.key | apt-key add - && \
        echo "'"deb [arch=amd64] https://repo.jellyfin.org/ubuntu focal main"'" > /etc/apt/sources.list.d/jellyfin.list && \
        curl -s https://repositories.intel.com/graphics/intel-graphics.key | apt-key add - && \
        echo "'"deb [arch=amd64] https://repositories.intel.com/graphics/ubuntu focal main"'" > /etc/apt/sources.list.d/intel-graphics.list ; \
    ;; \
    '"'linux/arm64'"') \
        export ARCH='"'arm64'"' && \
        unset NVIDIA_DRIVER_CAPABILITIES && \
        curl -s https://repo.jellyfin.org/ubuntu/jellyfin_team.gpg.key | apt-key add - && \
        curl -s https://keyserver.ubuntu.com/pks/lookup?op=get\&search=0x6587ffd6536b8826e88a62547876ae518cbcf2f2 | apt-key add - && \
        echo "'"deb [arch=arm64] https://repo.jellyfin.org/ubuntu focal main"'" > /etc/apt/sources.list.d/jellyfin.list && \
        echo "'"deb http://ppa.launchpad.net/ubuntu-raspi2/ppa-nightly/ubuntu focal main"'" > /etc/apt/sources.list.d/raspbins.list ; \
    ;; \
   esac \
   && \
   echo "'"**** install runtime packages ****"'" && \
     '"${UPTCOMMAND}"' && \
   echo "'"**** install packages ****"'" && \
     '"${INSTCOMMAND}"' '"${PACKAGES}"' && \
   echo "'"**** install jellyfin ****"'" && \
     '"${INSTCOMMAND}"' jellyfin-server='"${NEWVERSION}"' && \
   case $TARGETPLATFORM in \
    '"'linux/amd64'"') '"${UPTCOMMAND}"' && '"${INSTCOMMAND}"' '"${AMDEXTRA}"' libva2='"${INTEL_LIBVA_VER}"' libigdgmm11='"${INTEL_GMM_VER}"' intel-media-va-driver-non-free='"${INTEL_iHD_VER}"';; \
    '"'linux/arm64'"') '"${UPTCOMMAND}"' && '"${INSTCOMMAND}"' '"${ARMEXTRA}"';; \
   esac \
   && \
   echo "'"**** set permissions ****"'" && \
     usermod -d /app abc && \
   echo "'"**** cleanup ****"'" && \
     '"${CLEANUP}"'

COPY --chown=abc '"${APPFOLDER}"'/root/ /

'"${PORT}"'
'"${VOLUMEN}"'
##EOF' > ./$FOLDER/$APP/Dockerfile
