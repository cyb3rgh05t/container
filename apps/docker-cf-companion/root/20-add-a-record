#!/command/with-contenv bash
## change to "bin/sh" when necessary

auth_email={CLOUDFLARE_EMAIL}                   # The email used to login 'https://dash.cloudflare.com'
auth_method="global"                            # Set to "global" for Global API Key or "token" for Scoped API Token
auth_key=${CLOUDFLARE_API_KEY}                  # Your API Token or Global API Key
zone_identifier=${DOMAIN1_ZONE_ID}              # Can be found in the "Overview" tab of your domain
record_name="A"                                 # Which record you want to be synced
ttl="3600"                                      # Set the DNS TTL (seconds)
proxy="true"                                    # Set the proxy to true or false
sitename="{DOMAIN}"                             # Title of site "Example Site"

###########################################
## Check if we have a public IP
###########################################
ipv4_regex='([01]?[0-9]?[0-9]|2[0-4][0-9]|25[0-5])\.([01]?[0-9]?[0-9]|2[0-4][0-9]|25[0-5])\.([01]?[0-9]?[0-9]|2[0-4][0-9]|25[0-5])\.([01]?[0-9]?[0-9]|2[0-4][0-9]|25[0-5])'
ip=$(curl -s -4 https://cloudflare.com/cdn-cgi/trace | grep -E '^ip'); ret=$?
if [[ ! $ret == 0 ]]; then # In the case that cloudflare failed to return an ip.
    # Attempt to get the ip from other websites.
    ip=$(curl -s https://api.ipify.org || curl -s https://ipv4.icanhazip.com)
else
    # Extract just the ip from the ip line from cloudflare.
    ip=$(echo $ip | sed -E "s/^ip=($ipv4_regex)$/\1/")
fi

# Use regex to check for proper IPv4 format.
if [[ ! $ip =~ ^$ipv4_regex$ ]]; then
   echo "Updater: Failed to find a valid IP." && exit 2
fi

###########################################
## Check and set the proper auth header
###########################################
if [[ "${auth_method}" == "global" ]]; then
   auth_header="X-Auth-Key:"
else
   auth_header="Authorization: Bearer"
fi

###########################################
## Seek for the A record
###########################################

echo "Updater: Check Initiated"
record=$(curl -s -X GET "https://api.cloudflare.com/client/v4/zones/$zone_identifier/dns_records?type=A&name=$record_name" \
                      -H "X-Auth-Email: $auth_email" \
                      -H "$auth_header $auth_key" \
                      -H "Content-Type: application/json")

###########################################
## Check if the domain has an A record
###########################################
if [[ $record == *"\"count\":0"* ]]; then
   echo "Updater: Record does not exist, perhaps create one first? (${ip} for ${record_name})" && exit 1
fi

###########################################
## Set the record identifier from result
###########################################
record_identifier=$(echo "$record" | sed -E 's/.*"id":"(\w+)".*/\1/')

###########################################
## Change the IP@Cloudflare using the API
###########################################
update=$(curl -s -X PATCH "https://api.cloudflare.com/client/v4/zones/$zone_identifier/dns_records/$record_identifier" \
                     -H "X-Auth-Email: $auth_email" \
                     -H "$auth_header $auth_key" \
                     -H "Content-Type: application/json" \
                     --data "{\"type\":\"A\",\"name\":\"$record_name\",\"content\":\"$ip\",\"ttl\":\"$ttl\",\"proxied\":${proxy}}")

exit 0
